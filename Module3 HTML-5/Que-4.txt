Que.-> Canvas and SVG tags.

Ans.-> Both the <canvas> and <svg> tags in HTML5 are used for creating graphics and visual elements on a web page, but they differ in how they achieve this and their use cases:

1.<canvas> tag:

-> <canvas> is a HTML5 element that provides a bitmap-based drawing surface for creating dynamic graphics, animations, and interactive content.
-> It is essentially a rectangular region where you can draw using JavaScript. You can manipulate individual pixels on the canvas to create custom graphics.
-> The content drawn on a <canvas> element is not part of the DOM (Document Object Model), which means it's not accessible to screen readers and search engines by default. It's mainly for visual rendering.
-> You use JavaScript to draw on a <canvas> element using the 2D Canvas API or the WebGL API for 3D graphics.
-> Example:
<html> 
<body> 
    <canvas id="newCanvas" width="100" height="100"
        style="border:1px solid #000000;"> 
    </canvas> 
      
    <script> 
        var c = document.getElementById('newCanvas'); 
        var ctx = c.getContext('2d'); 
        ctx.fillStyle = '#7cce2b'; 
        ctx.fillRect(0, 0, 100, 100); 
    </script> 
</body>
</html> 

2.<svg> tag:

-> <svg> stands for Scalable Vector Graphics and is an XML-based language for defining vector graphics, shapes, and images. SVG is resolution-independent and can scale without loss of quality.
-> It is a part of the DOM, which means SVG graphics are accessible to screen readers and can be manipulated using CSS and JavaScript.
-> You can create and style graphical elements, such as lines, shapes, text, and images, within an SVG container. You define these elements as XML tags.
-> Animations and interactivity can also be added to SVG using JavaScript.
-> Example:
<html> 
 
 <body> 
   <svg width="400" height="200">
  <circle cx="100" cy="100" r="50" fill="blue" />
  <rect x="150" y="50" width="100" height="100" fill="red" />
</svg>
</body>
</html>